{
	"info": {
		"_postman_id": "d9dd06ed-0d78-41e5-bde7-64dd11f6841b",
		"name": "Trade-Tix/ Tickets",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35400152"
	},
	"item": [
		{
			"name": "TradeTix/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Fixed ReferenceError by defining responseData variable\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"User object contains required fields\", function () {\r",
							"    const responseData = pm.response.json().data.user;\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object').and.to.include.all.keys('_id', 'username', 'email', 'createdAt', 'updatedAt', '__v');\r",
							"});\r",
							"\r",
							"pm.globals.set(\"authToken\", pm.response.json().data.token);\r",
							"\r",
							"pm.test(\"Response is an object with loggedInUser property\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('data');\r",
							"});\r",
							"\r",
							"pm.test(\"Token is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json().data.token;\r",
							"    pm.expect(responseData).to.be.a('string').and.to.not.be.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authToken1}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"qwerty@gmail.com\",\r\n  \"password\": \"qwerty@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://tradetix.api.c-9c362c3.kyma.ondemand.com/api/users/login",
					"protocol": "http",
					"host": [
						"tradetix",
						"api",
						"c-9c362c3",
						"kyma",
						"ondemand",
						"com"
					],
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Trade-Tix/CreateNewTicket",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an object with data property\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('data');\r",
							"});\r",
							"\r",
							"pm.test(\"Response object has an owner property\", function () {\r",
							"    pm.expect(pm.response.json().data).to.have.property('owner');\r",
							"});\r",
							"\r",
							"pm.test(\"Response owner property has an _id property\", function () {\r",
							"    pm.expect(pm.response.json().data.owner).to.have.property('_id');\r",
							"});\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"pm.globals.set(\"ID\", pm.response.json().data._id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Arijit Singh Concert\",\r\n  \"description\": \"Arijit Singh Concert in Mumbai\",\r\n  \"price\": 1000,\r\n  \"expiry\": \"2022-12-31T00:00:00.000Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://tradetix.api.c-9c362c3.kyma.ondemand.com/api/tickets",
					"protocol": "http",
					"host": [
						"tradetix",
						"api",
						"c-9c362c3",
						"kyma",
						"ondemand",
						"com"
					],
					"path": [
						"api",
						"tickets"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://tradetix.api.c-9c362c3.kyma.ondemand.com/{{authToken2}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Price is a non-negative integer\", function () {\r",
							"  const responseData = pm.response.json().data.ticket;\r",
							"  \r",
							"  pm.expect(responseData.price).to.be.a('number');\r",
							"  pm.expect(responseData.price).to.be.at.least(0, \"Price should be a non-negative integer\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authToken}}"
					}
				],
				"url": {
					"raw": "http://tradetix.api.c-9c362c3.kyma.ondemand.com/api/tickets/{{ID}}",
					"protocol": "http",
					"host": [
						"tradetix",
						"api",
						"c-9c362c3",
						"kyma",
						"ondemand",
						"com"
					],
					"path": [
						"api",
						"tickets",
						"{{ID}}"
					]
				}
			},
			"response": []
		}
	]
}