{
	"info": {
		"_postman_id": "cc0487a9-95a9-4bdd-8eeb-6c004b3e8b19",
		"name": "Trade-tix Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35400152"
	},
	"item": [
		{
			"name": "Trade-Tix/Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Registered user should have username, email, and _id properties\", function () {",
							"    var registeredUser = pm.response.json().data.user;",
							"    pm.expect(registeredUser).to.have.property('username');",
							"    pm.expect(registeredUser).to.have.property('email');",
							"    pm.expect(registeredUser).to.have.property('_id');",
							"});",
							"",
							"pm.test(\"Token should be present in the response for a registered user\", function () {",
							"    var registeredUser = pm.response.json().data;",
							"    pm.expect(registeredUser).to.have.property('token');",
							"});",
							"",
							"const responseData = pm.response.json();",
							"pm.globals.set(\"authToken1\", responseData.data.token);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"qwert\",\r\n  \"email\": \"qwerty@gmail.com\",\r\n  \"password\": \"qwerty@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://tradetix.api.c-9c362c3.kyma.ondemand.com/api/users/register",
					"protocol": "http",
					"host": [
						"tradetix",
						"api",
						"c-9c362c3",
						"kyma",
						"ondemand",
						"com"
					],
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Trade-Tix/logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.to.have.status(200));\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.message).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Message is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response indicates successful logout\", function () {\r",
							"    pm.expect(pm.response.json().message).to.include(\"USER_LOGGED_OUT\").and.not.include(\"error\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authToken}}"
					}
				],
				"url": {
					"raw": "http://tradetix.api.c-9c362c3.kyma.ondemand.com/api/users/logout",
					"protocol": "http",
					"host": [
						"tradetix",
						"api",
						"c-9c362c3",
						"kyma",
						"ondemand",
						"com"
					],
					"path": [
						"api",
						"users",
						"logout"
					]
				},
				"description": "\nThis HTTP POST request is used to log out a user from the system. To automatically add the token to this post request, you can use Postman's environment variables or global variables to store the token from the login response. Then, in the pre-request script of this post request, you can set the Authorization header to 'Bearer {{authToken}}' using the stored token. This will automatically add the token to the post request when it is executed.\n\nUpon successful execution, the endpoint returns a status code of 401 and a JSON response with an \"error\" field.\n"
			},
			"response": []
		}
	]
}